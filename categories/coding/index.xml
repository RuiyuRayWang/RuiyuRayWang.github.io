<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coding on Karmotrine Dream</title>
    <link>/categories/coding/</link>
    <description>Recent content in Coding on Karmotrine Dream</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Jun 2022 15:44:29 +0800</lastBuildDate><atom:link href="/categories/coding/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pytorch: End of Agony</title>
      <link>/post/pytorch-end-of-agony/</link>
      <pubDate>Sat, 18 Jun 2022 15:44:29 +0800</pubDate>
      
      <guid>/post/pytorch-end-of-agony/</guid>
      <description>The agonizing days of building everything from scratch (NVIDIA driver, CUDA, cuDNN) is over.
Don&amp;rsquo;t have to spend time on
CUDA documentaion,
or building
Tensorflow：多版本部署、系统配置与版本切换.
Now, use PyTorch, and you will be amazed at ease of building a GPU capable meachine learning model with neural network.
The PyTorch binaries include the CUDA and cuDNN libraries.
How to check if torch uses cuDNN</description>
    </item>
    
    <item>
      <title>Fixing a Bug in R After Ubuntu Upgrade</title>
      <link>/post/fixing-a-bug-in-r-after-ubuntu-upgrade/</link>
      <pubDate>Fri, 17 Jun 2022 22:01:10 +0800</pubDate>
      
      <guid>/post/fixing-a-bug-in-r-after-ubuntu-upgrade/</guid>
      <description>Everybody knows the painstaking experience of system update, expecially when it comes to reconfiguring the environments and re-installing previously installed packages. Even with package management softwares like conda, bad things could still happen.
Recently I updated Ubuntu from 18.04 LTS to 20.04 LTS. At the same time I also decided to install the latest R 4.2.0 since there are some new features worth the bother.
I use rig to install R 4.</description>
    </item>
    
    <item>
      <title>Switch R Faster</title>
      <link>/post/switch-r-faster/</link>
      <pubDate>Wed, 15 Jun 2022 20:52:38 +0800</pubDate>
      
      <guid>/post/switch-r-faster/</guid>
      <description>Previously I wrote about how to build multiple R versions on Ubuntu and how to switch versions.
R：同时部署多版本 &amp;amp; 版本切换
It turns out that my &amp;ldquo;old school&amp;rdquo; move (ln -s) is outdated. Now there are many handy tools to do the job for you.
RSwitch is based on macOS. I&amp;rsquo;m using it personally, simply because I used it before and don&amp;rsquo;t want to bother changing gear.
rig supports multiple platforms and is probably the best choice for most users.</description>
    </item>
    
    <item>
      <title>Tensorflow：多版本部署、系统配置与版本切换</title>
      <link>/post/build-tensorflow/</link>
      <pubDate>Sun, 05 Dec 2021 22:57:25 +0800</pubDate>
      
      <guid>/post/build-tensorflow/</guid>
      <description>Building Environments for Cellassign and CellBLAST with multiple Tensorflow (GPU) Versions on Ubuntu As promised, I will write about my experience with installing tensorflow.
Why did I ever have to build Tensorflow myself?
The reason is that I was trying to use two tools: cellassign and Cell_BLAST, but they depend on different tensorflow versions. To make them both work, I used the following build strategy that allows different Tensorflow versions installed and run in separate conda environments.</description>
    </item>
    
    <item>
      <title>R：同时部署多版本 &amp; 版本切换</title>
      <link>/post/mult-r/</link>
      <pubDate>Thu, 02 Dec 2021 19:54:09 +0800</pubDate>
      
      <guid>/post/mult-r/</guid>
      <description>Clean Built of Multiple R Versions on Ubuntu Long time ago I built R-4.0.3 on Ubuntu system following these guides: link1, link2. Briefly, I added GPG Key to APT (Advanced Package Tool) and added CRAN repository and directly retrieved R by apt.
$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 $ sudo add-apt-repository &#39;deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/&#39; $ sudo apt update $ sudo apt install r-base Recently, I ran into an issue with cellassign when analyzing single cell datasets.</description>
    </item>
    
    <item>
      <title>装机</title>
      <link>/post/frq-used/</link>
      <pubDate>Thu, 02 Dec 2021 17:41:03 +0800</pubDate>
      
      <guid>/post/frq-used/</guid>
      <description>Mac (iOS) Reconfiguring conda env.
$ rm -rf miniconda3/ $ curl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh # Download miniconda $ shasum -a 256 Miniconda3-latest-MacOSX-x86_64.sh # verify installer hashes $ bash Miniconda3-latest-MacOSX-x86_64.sh base environment.
(base) conda install mamba -n base -c conda-forge # installing `mamba` to `base` allows other envs to use it Single Cell Biology.
(base) $ conda create -n SCBiology python=3.9 (base) $ conda activate SCBiology (SCBiology) $ conda install -c conda-forge scanpy python-igraph leidenalg (SCBiology) $ pip install -U scvelo (SCBiology) $ conda deactivate PyTorch.</description>
    </item>
    
  </channel>
</rss>
